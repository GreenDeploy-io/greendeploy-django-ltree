name: Test and deploy package

on:
  release:
    types: [published]

jobs:
  test: 
    runs-on: ubuntu-latest
    name: Python ${{ matrix.python-version }} sample
    strategy:
      matrix:
        python-version: [ '3.x', 'pypy-3.6', 'pypy-3.7' ]
    continue-on-error: false
    services:
      database:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DJANGO_DATABASE_HOST: localhost
      DJANGO_DATABASE_USER: postgres
      DJANGO_DATABASE_PASSWORD: postgres
      DJANGO_DATABASE_NAME: postgres

    steps:
        - uses: actions/checkout@v2
        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Depedencies
          run: |
            python -m pip install pytest
            python setup.py develop
        - name: Run tests
          run: pytest -x -vv tests/

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
